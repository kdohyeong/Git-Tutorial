12/27 학습한 깃 내용 정리.

1.
git add 
git commit 
git push 를 이용하여 파일을 깃허브에 업로드
git clone 을 이용하여 repository를 복제

2.
git log 
git status 를 이용하여 기록과 현재 상태 확인

3.
git reset 을 이용하여 add한 파일을 다시 내림 , git reset --hard commit주소를 이용하여 log기록 삭제

4. git commit --amend 를 들어가 a를 입력후 commit 내용을 수정 후 git push -f 를 이용하여 강제 푸시해서 commit내용 수정


12/28 학습내용 정리.

1. 
git branch 현재 브런치
git branch "브런치명" 
git checkout "브런치명" 브런치 이동
git merge 브런치 합치기후 push
git branch -d "브런치명" 브런치 지우기 

2. 
브런치 충돌 해결방법

develop 브런치를 만듬
작업하고 커밋함
master 브런치로 이동
주석을 달음
커밋함
develop 브런치의 commit과 master 브런치 commit 이 다름
수정한 파일을 다시열면 두가지 다 나오는데 둘중에 골라서 수정 후 저장
master 브런치에서 다시 add commit 후 merge develop 실행
-d "브런치명"으로 develop 제거.


3.
git remote  원격 저장소 확인
git remote show origin  상세 내용 확인
git remote add https://github.com/kdohyeong/kdohyeong.git 원격 저장소 등록
git remote rename test temp  원격 저장소 이름 명령
git remote -v 전체 목록 확인
git remote rm temp 원격 저장소 삭제
git log origin/master  특정 원격 저장소 로그 확인

4.
git log --stat  데이터양도 확인가능
git log -p -3  개수별로 확인
git log --pretty=oneline  한줄로 파악가능하게끔
git log --pretty=format:"%h -> %an , %ar : %s" --graph   
%h 해시값  %an 작성자이름 %ar 작성일 %s commit 주제

5. 
git pull 깃허브에서 변경한 내용을 컴퓨터로 받아들임
Readme 마크다운 방법

# 큰 제목 ## 조금 작은 제목 ### 작은제목

소스코드 블록 작성 방법 
```python
print(a)
a = [ 1,2,3]
```

링크를 연동하는 방법
[링크 제목](링크 주소)

순서 없는 목록 작성법
* 깃 clone
* 깃 pull
* 깃 commit

인용 구문 작성법

> '넣을 내용' -이름-

테이블 작성법

이름|영어|수학|과학
---|---|---|---|
김도형|98|98|100|
홍길동|12|50|90| 

강조 구문
**강조하고 싶은내용** ~~취소선~~